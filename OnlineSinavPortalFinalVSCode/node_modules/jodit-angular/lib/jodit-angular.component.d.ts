import { AfterViewInit, ElementRef, NgZone, OnDestroy } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Events } from './Events';
import * as ɵngcc0 from '@angular/core';
export declare class JoditAngularComponent extends Events implements AfterViewInit, OnDestroy, ControlValueAccessor {
    private elementRef;
    private ngZone;
    set config(v: object | undefined);
    get config(): object | undefined;
    private _config;
    tagName: string;
    id: string | undefined;
    defaultValue: string | undefined;
    element: HTMLElement;
    editor: any;
    private onChangeCallback;
    private onTouchedCallback;
    constructor(elementRef: ElementRef, ngZone: NgZone);
    createElement(): void;
    get value(): string;
    set value(v: string);
    resetEditor(): void;
    ngAfterViewInit(): void;
    createEditor(): void;
    ngOnDestroy(): void;
    writeValue(v: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: () => {}): void;
    setDisabledState(isDisabled: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<JoditAngularComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<JoditAngularComponent, "jodit-editor", never, { "tagName": "tagName"; "config": "config"; "defaultValue": "defaultValue"; "id": "id"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiam9kaXQtYW5ndWxhci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiam9kaXQtYW5ndWxhci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRWxlbWVudFJlZiwgTmdab25lLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRXZlbnRzIH0gZnJvbSAnLi9FdmVudHMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgSm9kaXRBbmd1bGFyQ29tcG9uZW50IGV4dGVuZHMgRXZlbnRzIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHNldCBjb25maWcodjogb2JqZWN0IHwgdW5kZWZpbmVkKTtcbiAgICBnZXQgY29uZmlnKCk6IG9iamVjdCB8IHVuZGVmaW5lZDtcbiAgICBwcml2YXRlIF9jb25maWc7XG4gICAgdGFnTmFtZTogc3RyaW5nO1xuICAgIGlkOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgZGVmYXVsdFZhbHVlOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgZWxlbWVudDogSFRNTEVsZW1lbnQ7XG4gICAgZWRpdG9yOiBhbnk7XG4gICAgcHJpdmF0ZSBvbkNoYW5nZUNhbGxiYWNrO1xuICAgIHByaXZhdGUgb25Ub3VjaGVkQ2FsbGJhY2s7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZiwgbmdab25lOiBOZ1pvbmUpO1xuICAgIGNyZWF0ZUVsZW1lbnQoKTogdm9pZDtcbiAgICBnZXQgdmFsdWUoKTogc3RyaW5nO1xuICAgIHNldCB2YWx1ZSh2OiBzdHJpbmcpO1xuICAgIHJlc2V0RWRpdG9yKCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgY3JlYXRlRWRpdG9yKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHY6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogKCkgPT4ge30pOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUoaXNEaXNhYmxlZDogYm9vbGVhbik6IHZvaWQ7XG59XG4iXX0=